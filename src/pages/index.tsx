import { type NextPage } from "next";
import Head from "next/head";
import { useEffect, useState } from "react";
import { motion } from 'framer-motion'
import { HiX } from 'react-icons/hi'


import type { ShoppingItem } from "@prisma/client";

import { trpc } from "../utils/trpc";
import ItemModal from "../components/ItemModal";

const Home: NextPage = () => {
  const [items, setItems] = useState<ShoppingItem[]>([]);
  const [modalOpen, setModalOpen] = useState<boolean>(false);

  const { data: itemsData, isLoading } =
    trpc.shoppingItem.getAllItems.useQuery();

  const { mutate: toggleChecked } = trpc.shoppingItem.toggleChecked.useMutation({
    onSuccess(shoppingItem) {
      // remove previous (with checked value old)
      setItems((previous) => previous.filter((item) => item.id !== shoppingItem.id))
      // add new (with checked value updated)
      setItems((previous) => [...previous, shoppingItem])
    }
  });

  const { mutate: deleteItem } = trpc.shoppingItem.deleteItem.useMutation({
    onSuccess(shoppingItem) {
      // remove previous (with checked value old)
      setItems((previous) => previous.filter((item) => item.id !== shoppingItem.id))
    }
  });

  useEffect(() => {
    if (itemsData) setItems(itemsData);
    console.log(itemsData)
  }, [itemsData]);

  if (!itemsData || isLoading) return <p>Loading ...</p>;
  else
    return (
      <>
        <Head>
          <title>Shopping List</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        {modalOpen && (
          <ItemModal setModalOpen={setModalOpen} setItems={setItems} />
        )}

        <main className="mx-auto my-12 max-w-3xl">
          <div className="flex justify-between">
            <h2 className="text-2xl font-semibold">My shopping list</h2>
            <button
              type="button"
              onClick={() => setModalOpen(true)}
              className="rounded-md bg-violet-500 p-2 text-sm text-white transition hover:bg-violet-600"
            >
              Add shopping item
            </button>
          </div>
          <ul className="mt-4">
            {items.map((item) => {
              const { id, name, checked } = item;

              return (
                <li
                  key={id}
                  className="flex w-full items-center justify-between"
                >
                  <div className="relative">
                  <div className='pointer-events-none absolute inset-0 flex origin-left items-center justify-center'>
                    <motion.div
                      initial={{ width: 0 }}
                      animate={{ width: items.find((item) => item.id === id)?.checked ? '100%' : 0 }}
                      transition={{ duration: 0.2, ease: 'easeInOut' }}
                      className='h-[2px] w-full translate-y-px bg-red-500'
                    />
                  </div>
                    <span
                      onClick={() => {
                        toggleChecked({
                          id,
                          checked: !checked
                        });
                      }}
                    >
                      {name}
                    </span>
                  </div>
                  <HiX onClick={() => deleteItem({ id })} className='cursor-pointer text-lg text-red-500' />

                </li>
              );
            })}
          </ul>
        </main>
      </>
    );
};

export default Home;
